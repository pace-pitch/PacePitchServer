openapi: 3.0.1
info:
  title: Pitching and Video Management API
  description: API for managing pitching sessions, individual pitches, and video uploads.
  version: "1.0.0"
servers:
  - url: 'http://3.34.215.141:8080/api'
paths:
  /sessions:
    post:
      summary: Create a new pitching session
      requestBody:
        description: Payload for creating a new pitching session
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePitchingSessionRequest'
      responses:
        '200':
          description: Successfully created a new pitching session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PitchingSessionResponse'
        '400':
          description: Invalid request data
    get:
      summary: Get a paginated list of pitching sessions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Paginated list of pitching sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PitchingSessionResponse'
  /sessions/{sessionId}/pitches:
    post:
      summary: Create a new pitch within a session
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Payload for creating a new individual pitch
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualPitchDTO'
      responses:
        '200':
          description: Successfully created a new individual pitch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualPitchResponse'
        '400':
          description: Invalid request data
    get:
      summary: Get a paginated list of individual pitches within a session
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Paginated list of individual pitches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndividualPitchResponse'
  /sessions/{sessionId}/pitches/{pitchId}:
    get:
      summary: Get a specific individual pitch by ID within the context of the session
      parameters:
        - in: path
          name: sessionId
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: pitchId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Specific individual pitch details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualPitchResponse'
        '404':
          description: Individual pitch not found
components:
  schemas:
    CreatePitchingSessionRequest:
      type: object
      properties:
        title:
          type: string
        memo:
          type: string
    PitchingSessionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        memo:
          type: string
    IndividualPitchDTO:
      type: object
      properties:
        velocity:
          type: number
          format: double
        pitchType:
          $ref: '#/components/schemas/PitchType'
        memo:
          type: string
        throwingHand:
          $ref: '#/components/schemas/ThrowingHand'
        videoUrl:
          type: string
          format: uri
    IndividualPitchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        velocity:
          type: number
          format: double
        pitchType:
          $ref: '#/components/schemas/PitchType'
        memo:
          type: string
        throwingHand:
          $ref: '#/components/schemas/ThrowingHand'
        videoUrl:
          type: string
          format: uri
    PitchType:
      type: string
      enum:
        - Fastball
        - Curveball
        - Slider
    ThrowingHand:
      type: string
      enum:
        - Left
        - Right
        - Both

